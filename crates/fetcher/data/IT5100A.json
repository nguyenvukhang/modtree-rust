{"acad_year":"2022/2023","preclusion":"","description":"Typed functional programming are becoming more widely adopted in industry, as can be seen in the success of a number of advanced programming languages, such as OCaml, Haskell and Scala 3. These advanced languages offer a range of expressive features to allow robust, reusable and high-performing software codes to be safely and rapidly developed. \n\nThis module will cover key programming techniques of typed functional programming that are becoming widely adopted, such as strong typing, code composition and abstraction, effect handlers, and safe techniques for asynchronous and concurrent programming.","title":"Typed Functional Programming in Practice","department":"Computer Science","faculty":"Computing","prerequisite":"","module_credit":"2","module_code":"IT5100A","prereq_tree":"","fulfill_requirements":[],"workload":[2,0,0,2,1]}